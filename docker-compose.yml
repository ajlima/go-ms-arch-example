version: '3'
volumes:
  data-volume: {}
services:
  app:
      build: ./
      ports:
        - 8080:8080
      depends_on:
        - db
        - kafka
      environment:
        - SERVICE_NAME=ms-arch-example
        - HTTP_PORT=8080
        - DATABASE_URL=db
        - DATABASE_PORT=5432
        - DATABASE_NAME=golang
        - DATABASE_USERNAME=superuser
        - DATABASE_PASSWORD=superuser
        - PROFILE=dev
        - LOG_LEVEL=info
        - LOG_FILE=./ms-arch-example.log
        - KAFKA_BROKERS=kafka:9092
        - KAFKA_OUT_TOPIC=sales_transactions
        - KAFKA_PARTITION=0
        - KAFKA_OFFSET=0
        - HTTP_REQUEST_LOG=OFF
        - GIN_MODE=release
  db:
    image: postgres
    ports:
      - "54321:5432"
    environment:
      POSTGRES_USER: superuser
      POSTGRES_PASSWORD: superuser
      POSTGRES_DB: golang
    volumes:
      - data-volume:/var/lib/postgresql/data
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper